<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.prostate.doctor.mapper.DoctorMapper">
  <!--表和实体类对应的关系-->
  <resultMap id="BaseResultMap" type="com.prostate.doctor.entity.Doctor">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="doctor_phone" jdbcType="VARCHAR" property="doctorPhone" />
    <result column="doctor_password" jdbcType="VARCHAR" property="doctorPassword" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_ip" jdbcType="VARCHAR" property="createIp" />
    <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime" />
    <result column="last_login_ip" jdbcType="VARCHAR" property="lastLoginIp" />
  </resultMap>
  <sql id="Base_Column_List">
    id, doctor_phone, doctor_password, salt, create_time, create_ip, last_login_time, 
    last_login_ip
  </sql>
  <!--通过主键进行查询-->
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pra_doctor
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <!--通过电话号码查询对应的医生-->
  <select id="selectByPhone" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from pra_doctor
    where doctor_phone = #{doctorPhone,jdbcType=VARCHAR}
  </select>
<!--通过主键进行删除-->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from pra_doctor
    where id = #{id,jdbcType=VARCHAR}
  </delete>


  <!--插入一条医生的数据,主键通过uuid生成-->
  <insert id="insertSelective" parameterType="com.prostate.doctor.entity.Doctor">
    <selectKey keyProperty="id" resultType="string" order="BEFORE">
      select replace(uuid(), '-', '') as id from dual
    </selectKey>
    insert into pra_doctor
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="doctorPhone != null">
        doctor_phone,
      </if>
      <if test="doctorPassword != null">
        doctor_password,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createIp != null">
        create_ip,
      </if>
      <if test="lastLoginTime != null">
        last_login_time,
      </if>
      <if test="lastLoginIp != null">
        last_login_ip,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="doctorPhone != null">
        #{doctorPhone,jdbcType=VARCHAR},
      </if>
      <if test="doctorPassword != null">
        #{doctorPassword,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createIp != null">
        #{createIp,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null">
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginIp != null">
        #{lastLoginIp,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <!--更新医生的信息-->
  <update id="updateByPrimaryKeySelective" parameterType="com.prostate.doctor.entity.Doctor">
    update pra_doctor
    <set>
      <if test="doctorPhone != null">
        doctor_phone = #{doctorPhone,jdbcType=VARCHAR},
      </if>
      <if test="doctorPassword != null">
        doctor_password = #{doctorPassword,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createIp != null">
        create_ip = #{createIp,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null">
        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginIp != null">
        last_login_ip = #{lastLoginIp,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <!--更新医生的密码-->
  <update id="updDoctorPassword" parameterType="com.prostate.doctor.entity.Doctor">
    update pra_doctor
    <set>
      <if test="doctorPhone != null">
        doctor_phone = #{doctorPhone,jdbcType=VARCHAR},
      </if>
      <if test="doctorPassword != null">
        doctor_password = #{doctorPassword,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createIp != null">
        create_ip = #{createIp,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null">
        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginIp != null">
        last_login_ip = #{lastLoginIp,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>


</mapper>